/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AAIfThenElseStatement extends PAIfThenElseStatement
{
    private PAIfStatement _aIfStatement_;
    private PAExpression _aExpression_;
    private PAElseStatement _aElseStatement_;

    public AAIfThenElseStatement()
    {
        // Constructor
    }

    public AAIfThenElseStatement(
        @SuppressWarnings("hiding") PAIfStatement _aIfStatement_,
        @SuppressWarnings("hiding") PAExpression _aExpression_,
        @SuppressWarnings("hiding") PAElseStatement _aElseStatement_)
    {
        // Constructor
        setAIfStatement(_aIfStatement_);

        setAExpression(_aExpression_);

        setAElseStatement(_aElseStatement_);

    }

    @Override
    public Object clone()
    {
        return new AAIfThenElseStatement(
            cloneNode(this._aIfStatement_),
            cloneNode(this._aExpression_),
            cloneNode(this._aElseStatement_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAIfThenElseStatement(this);
    }

    public PAIfStatement getAIfStatement()
    {
        return this._aIfStatement_;
    }

    public void setAIfStatement(PAIfStatement node)
    {
        if(this._aIfStatement_ != null)
        {
            this._aIfStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aIfStatement_ = node;
    }

    public PAExpression getAExpression()
    {
        return this._aExpression_;
    }

    public void setAExpression(PAExpression node)
    {
        if(this._aExpression_ != null)
        {
            this._aExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aExpression_ = node;
    }

    public PAElseStatement getAElseStatement()
    {
        return this._aElseStatement_;
    }

    public void setAElseStatement(PAElseStatement node)
    {
        if(this._aElseStatement_ != null)
        {
            this._aElseStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aElseStatement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aIfStatement_)
            + toString(this._aExpression_)
            + toString(this._aElseStatement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aIfStatement_ == child)
        {
            this._aIfStatement_ = null;
            return;
        }

        if(this._aExpression_ == child)
        {
            this._aExpression_ = null;
            return;
        }

        if(this._aElseStatement_ == child)
        {
            this._aElseStatement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aIfStatement_ == oldChild)
        {
            setAIfStatement((PAIfStatement) newChild);
            return;
        }

        if(this._aExpression_ == oldChild)
        {
            setAExpression((PAExpression) newChild);
            return;
        }

        if(this._aElseStatement_ == oldChild)
        {
            setAElseStatement((PAElseStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
