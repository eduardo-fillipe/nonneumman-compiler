/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class AOrExp extends PExp
{
    private PExp _exp_;
    private TTkReservedBoolOr _tkReservedBoolOr_;
    private POp _op_;

    public AOrExp()
    {
        // Constructor
    }

    public AOrExp(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TTkReservedBoolOr _tkReservedBoolOr_,
        @SuppressWarnings("hiding") POp _op_)
    {
        // Constructor
        setExp(_exp_);

        setTkReservedBoolOr(_tkReservedBoolOr_);

        setOp(_op_);

    }

    @Override
    public Object clone()
    {
        return new AOrExp(
            cloneNode(this._exp_),
            cloneNode(this._tkReservedBoolOr_),
            cloneNode(this._op_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrExp(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TTkReservedBoolOr getTkReservedBoolOr()
    {
        return this._tkReservedBoolOr_;
    }

    public void setTkReservedBoolOr(TTkReservedBoolOr node)
    {
        if(this._tkReservedBoolOr_ != null)
        {
            this._tkReservedBoolOr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkReservedBoolOr_ = node;
    }

    public POp getOp()
    {
        return this._op_;
    }

    public void setOp(POp node)
    {
        if(this._op_ != null)
        {
            this._op_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._op_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._tkReservedBoolOr_)
            + toString(this._op_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._tkReservedBoolOr_ == child)
        {
            this._tkReservedBoolOr_ = null;
            return;
        }

        if(this._op_ == child)
        {
            this._op_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._tkReservedBoolOr_ == oldChild)
        {
            setTkReservedBoolOr((TTkReservedBoolOr) newChild);
            return;
        }

        if(this._op_ == oldChild)
        {
            setOp((POp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
