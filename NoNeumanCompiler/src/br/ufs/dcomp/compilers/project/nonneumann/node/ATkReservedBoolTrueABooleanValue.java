/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class ATkReservedBoolTrueABooleanValue extends PABooleanValue
{
    private TTkReservedBoolTrue _tkReservedBoolTrue_;

    public ATkReservedBoolTrueABooleanValue()
    {
        // Constructor
    }

    public ATkReservedBoolTrueABooleanValue(
        @SuppressWarnings("hiding") TTkReservedBoolTrue _tkReservedBoolTrue_)
    {
        // Constructor
        setTkReservedBoolTrue(_tkReservedBoolTrue_);

    }

    @Override
    public Object clone()
    {
        return new ATkReservedBoolTrueABooleanValue(
            cloneNode(this._tkReservedBoolTrue_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATkReservedBoolTrueABooleanValue(this);
    }

    public TTkReservedBoolTrue getTkReservedBoolTrue()
    {
        return this._tkReservedBoolTrue_;
    }

    public void setTkReservedBoolTrue(TTkReservedBoolTrue node)
    {
        if(this._tkReservedBoolTrue_ != null)
        {
            this._tkReservedBoolTrue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkReservedBoolTrue_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tkReservedBoolTrue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tkReservedBoolTrue_ == child)
        {
            this._tkReservedBoolTrue_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tkReservedBoolTrue_ == oldChild)
        {
            setTkReservedBoolTrue((TTkReservedBoolTrue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
