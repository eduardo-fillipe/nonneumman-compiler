/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import java.util.*;
import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class AParametersSignature extends PParametersSignature
{
    private PParameterSignature _parameterSignature_;
    private final LinkedList<PParametersSignatureAux> _parametersSignatureAux_ = new LinkedList<PParametersSignatureAux>();

    public AParametersSignature()
    {
        // Constructor
    }

    public AParametersSignature(
        @SuppressWarnings("hiding") PParameterSignature _parameterSignature_,
        @SuppressWarnings("hiding") List<?> _parametersSignatureAux_)
    {
        // Constructor
        setParameterSignature(_parameterSignature_);

        setParametersSignatureAux(_parametersSignatureAux_);

    }

    @Override
    public Object clone()
    {
        return new AParametersSignature(
            cloneNode(this._parameterSignature_),
            cloneList(this._parametersSignatureAux_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParametersSignature(this);
    }

    public PParameterSignature getParameterSignature()
    {
        return this._parameterSignature_;
    }

    public void setParameterSignature(PParameterSignature node)
    {
        if(this._parameterSignature_ != null)
        {
            this._parameterSignature_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parameterSignature_ = node;
    }

    public LinkedList<PParametersSignatureAux> getParametersSignatureAux()
    {
        return this._parametersSignatureAux_;
    }

    public void setParametersSignatureAux(List<?> list)
    {
        for(PParametersSignatureAux e : this._parametersSignatureAux_)
        {
            e.parent(null);
        }
        this._parametersSignatureAux_.clear();

        for(Object obj_e : list)
        {
            PParametersSignatureAux e = (PParametersSignatureAux) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parametersSignatureAux_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._parameterSignature_)
            + toString(this._parametersSignatureAux_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._parameterSignature_ == child)
        {
            this._parameterSignature_ = null;
            return;
        }

        if(this._parametersSignatureAux_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._parameterSignature_ == oldChild)
        {
            setParameterSignature((PParameterSignature) newChild);
            return;
        }

        for(ListIterator<PParametersSignatureAux> i = this._parametersSignatureAux_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParametersSignatureAux) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
