/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class AAFunctionDec extends PAFunctionDec
{
    private PAType _aType_;
    private PAParameters _aParameters_;
    private PAExp _aExp_;

    public AAFunctionDec()
    {
        // Constructor
    }

    public AAFunctionDec(
        @SuppressWarnings("hiding") PAType _aType_,
        @SuppressWarnings("hiding") PAParameters _aParameters_,
        @SuppressWarnings("hiding") PAExp _aExp_)
    {
        // Constructor
        setAType(_aType_);

        setAParameters(_aParameters_);

        setAExp(_aExp_);

    }

    @Override
    public Object clone()
    {
        return new AAFunctionDec(
            cloneNode(this._aType_),
            cloneNode(this._aParameters_),
            cloneNode(this._aExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAFunctionDec(this);
    }

    public PAType getAType()
    {
        return this._aType_;
    }

    public void setAType(PAType node)
    {
        if(this._aType_ != null)
        {
            this._aType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aType_ = node;
    }

    public PAParameters getAParameters()
    {
        return this._aParameters_;
    }

    public void setAParameters(PAParameters node)
    {
        if(this._aParameters_ != null)
        {
            this._aParameters_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aParameters_ = node;
    }

    public PAExp getAExp()
    {
        return this._aExp_;
    }

    public void setAExp(PAExp node)
    {
        if(this._aExp_ != null)
        {
            this._aExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aType_)
            + toString(this._aParameters_)
            + toString(this._aExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aType_ == child)
        {
            this._aType_ = null;
            return;
        }

        if(this._aParameters_ == child)
        {
            this._aParameters_ = null;
            return;
        }

        if(this._aExp_ == child)
        {
            this._aExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aType_ == oldChild)
        {
            setAType((PAType) newChild);
            return;
        }

        if(this._aParameters_ == oldChild)
        {
            setAParameters((PAParameters) newChild);
            return;
        }

        if(this._aExp_ == oldChild)
        {
            setAExp((PAExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
