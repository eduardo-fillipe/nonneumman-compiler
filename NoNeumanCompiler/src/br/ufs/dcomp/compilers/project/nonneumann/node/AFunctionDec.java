/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class AFunctionDec extends PFunctionDec
{
    private TTkReservedEntry _tkReservedEntry_;
    private TTkSignParOpen _tkSignParOpen_;
    private TTkReservedFunction _tkReservedFunction_;
    private PType _type_;
    private TTkId _tkId_;
    private PParametersFunctionAux _parametersFunctionAux_;
    private TTkSignColon _tkSignColon_;
    private PExpFunctionAux _expFunctionAux_;
    private TTkSignParClose _tkSignParClose_;

    public AFunctionDec()
    {
        // Constructor
    }

    public AFunctionDec(
        @SuppressWarnings("hiding") TTkReservedEntry _tkReservedEntry_,
        @SuppressWarnings("hiding") TTkSignParOpen _tkSignParOpen_,
        @SuppressWarnings("hiding") TTkReservedFunction _tkReservedFunction_,
        @SuppressWarnings("hiding") PType _type_,
        @SuppressWarnings("hiding") TTkId _tkId_,
        @SuppressWarnings("hiding") PParametersFunctionAux _parametersFunctionAux_,
        @SuppressWarnings("hiding") TTkSignColon _tkSignColon_,
        @SuppressWarnings("hiding") PExpFunctionAux _expFunctionAux_,
        @SuppressWarnings("hiding") TTkSignParClose _tkSignParClose_)
    {
        // Constructor
        setTkReservedEntry(_tkReservedEntry_);

        setTkSignParOpen(_tkSignParOpen_);

        setTkReservedFunction(_tkReservedFunction_);

        setType(_type_);

        setTkId(_tkId_);

        setParametersFunctionAux(_parametersFunctionAux_);

        setTkSignColon(_tkSignColon_);

        setExpFunctionAux(_expFunctionAux_);

        setTkSignParClose(_tkSignParClose_);

    }

    @Override
    public Object clone()
    {
        return new AFunctionDec(
            cloneNode(this._tkReservedEntry_),
            cloneNode(this._tkSignParOpen_),
            cloneNode(this._tkReservedFunction_),
            cloneNode(this._type_),
            cloneNode(this._tkId_),
            cloneNode(this._parametersFunctionAux_),
            cloneNode(this._tkSignColon_),
            cloneNode(this._expFunctionAux_),
            cloneNode(this._tkSignParClose_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunctionDec(this);
    }

    public TTkReservedEntry getTkReservedEntry()
    {
        return this._tkReservedEntry_;
    }

    public void setTkReservedEntry(TTkReservedEntry node)
    {
        if(this._tkReservedEntry_ != null)
        {
            this._tkReservedEntry_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkReservedEntry_ = node;
    }

    public TTkSignParOpen getTkSignParOpen()
    {
        return this._tkSignParOpen_;
    }

    public void setTkSignParOpen(TTkSignParOpen node)
    {
        if(this._tkSignParOpen_ != null)
        {
            this._tkSignParOpen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignParOpen_ = node;
    }

    public TTkReservedFunction getTkReservedFunction()
    {
        return this._tkReservedFunction_;
    }

    public void setTkReservedFunction(TTkReservedFunction node)
    {
        if(this._tkReservedFunction_ != null)
        {
            this._tkReservedFunction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkReservedFunction_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TTkId getTkId()
    {
        return this._tkId_;
    }

    public void setTkId(TTkId node)
    {
        if(this._tkId_ != null)
        {
            this._tkId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkId_ = node;
    }

    public PParametersFunctionAux getParametersFunctionAux()
    {
        return this._parametersFunctionAux_;
    }

    public void setParametersFunctionAux(PParametersFunctionAux node)
    {
        if(this._parametersFunctionAux_ != null)
        {
            this._parametersFunctionAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parametersFunctionAux_ = node;
    }

    public TTkSignColon getTkSignColon()
    {
        return this._tkSignColon_;
    }

    public void setTkSignColon(TTkSignColon node)
    {
        if(this._tkSignColon_ != null)
        {
            this._tkSignColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignColon_ = node;
    }

    public PExpFunctionAux getExpFunctionAux()
    {
        return this._expFunctionAux_;
    }

    public void setExpFunctionAux(PExpFunctionAux node)
    {
        if(this._expFunctionAux_ != null)
        {
            this._expFunctionAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expFunctionAux_ = node;
    }

    public TTkSignParClose getTkSignParClose()
    {
        return this._tkSignParClose_;
    }

    public void setTkSignParClose(TTkSignParClose node)
    {
        if(this._tkSignParClose_ != null)
        {
            this._tkSignParClose_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignParClose_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tkReservedEntry_)
            + toString(this._tkSignParOpen_)
            + toString(this._tkReservedFunction_)
            + toString(this._type_)
            + toString(this._tkId_)
            + toString(this._parametersFunctionAux_)
            + toString(this._tkSignColon_)
            + toString(this._expFunctionAux_)
            + toString(this._tkSignParClose_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tkReservedEntry_ == child)
        {
            this._tkReservedEntry_ = null;
            return;
        }

        if(this._tkSignParOpen_ == child)
        {
            this._tkSignParOpen_ = null;
            return;
        }

        if(this._tkReservedFunction_ == child)
        {
            this._tkReservedFunction_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._tkId_ == child)
        {
            this._tkId_ = null;
            return;
        }

        if(this._parametersFunctionAux_ == child)
        {
            this._parametersFunctionAux_ = null;
            return;
        }

        if(this._tkSignColon_ == child)
        {
            this._tkSignColon_ = null;
            return;
        }

        if(this._expFunctionAux_ == child)
        {
            this._expFunctionAux_ = null;
            return;
        }

        if(this._tkSignParClose_ == child)
        {
            this._tkSignParClose_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tkReservedEntry_ == oldChild)
        {
            setTkReservedEntry((TTkReservedEntry) newChild);
            return;
        }

        if(this._tkSignParOpen_ == oldChild)
        {
            setTkSignParOpen((TTkSignParOpen) newChild);
            return;
        }

        if(this._tkReservedFunction_ == oldChild)
        {
            setTkReservedFunction((TTkReservedFunction) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(this._tkId_ == oldChild)
        {
            setTkId((TTkId) newChild);
            return;
        }

        if(this._parametersFunctionAux_ == oldChild)
        {
            setParametersFunctionAux((PParametersFunctionAux) newChild);
            return;
        }

        if(this._tkSignColon_ == oldChild)
        {
            setTkSignColon((TTkSignColon) newChild);
            return;
        }

        if(this._expFunctionAux_ == oldChild)
        {
            setExpFunctionAux((PExpFunctionAux) newChild);
            return;
        }

        if(this._tkSignParClose_ == oldChild)
        {
            setTkSignParClose((TTkSignParClose) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
