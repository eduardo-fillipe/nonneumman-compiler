/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.parser;

import br.ufs.dcomp.compilers.project.nonneumann.node.*;
import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTTkReservedEntry(@SuppressWarnings("unused") TTkReservedEntry node)
    {
        this.index = 0;
    }

    @Override
    public void caseTTkReservedFunction(@SuppressWarnings("unused") TTkReservedFunction node)
    {
        this.index = 1;
    }

    @Override
    public void caseTTkReservedConst(@SuppressWarnings("unused") TTkReservedConst node)
    {
        this.index = 2;
    }

    @Override
    public void caseTTkReservedTypeInt(@SuppressWarnings("unused") TTkReservedTypeInt node)
    {
        this.index = 3;
    }

    @Override
    public void caseTTkReservedTypeBool(@SuppressWarnings("unused") TTkReservedTypeBool node)
    {
        this.index = 4;
    }

    @Override
    public void caseTTkReservedTypeReal(@SuppressWarnings("unused") TTkReservedTypeReal node)
    {
        this.index = 5;
    }

    @Override
    public void caseTTkReservedBoolTrue(@SuppressWarnings("unused") TTkReservedBoolTrue node)
    {
        this.index = 6;
    }

    @Override
    public void caseTTkReservedBoolFalse(@SuppressWarnings("unused") TTkReservedBoolFalse node)
    {
        this.index = 7;
    }

    @Override
    public void caseTTkReservedBoolAnd(@SuppressWarnings("unused") TTkReservedBoolAnd node)
    {
        this.index = 8;
    }

    @Override
    public void caseTTkReservedBoolOr(@SuppressWarnings("unused") TTkReservedBoolOr node)
    {
        this.index = 9;
    }

    @Override
    public void caseTTkReservedIf(@SuppressWarnings("unused") TTkReservedIf node)
    {
        this.index = 10;
    }

    @Override
    public void caseTTkReservedThen(@SuppressWarnings("unused") TTkReservedThen node)
    {
        this.index = 11;
    }

    @Override
    public void caseTTkReservedElse(@SuppressWarnings("unused") TTkReservedElse node)
    {
        this.index = 12;
    }

    @Override
    public void caseTTkReservedLambda(@SuppressWarnings("unused") TTkReservedLambda node)
    {
        this.index = 13;
    }

    @Override
    public void caseTTkNumberIntegerDec(@SuppressWarnings("unused") TTkNumberIntegerDec node)
    {
        this.index = 14;
    }

    @Override
    public void caseTTkNumberIntegerHex(@SuppressWarnings("unused") TTkNumberIntegerHex node)
    {
        this.index = 15;
    }

    @Override
    public void caseTTkNumberFloat(@SuppressWarnings("unused") TTkNumberFloat node)
    {
        this.index = 16;
    }

    @Override
    public void caseTTkNumberFloatCientificNotation(@SuppressWarnings("unused") TTkNumberFloatCientificNotation node)
    {
        this.index = 17;
    }

    @Override
    public void caseTTkSignPlus(@SuppressWarnings("unused") TTkSignPlus node)
    {
        this.index = 18;
    }

    @Override
    public void caseTTkSignMinus(@SuppressWarnings("unused") TTkSignMinus node)
    {
        this.index = 19;
    }

    @Override
    public void caseTTkSignMult(@SuppressWarnings("unused") TTkSignMult node)
    {
        this.index = 20;
    }

    @Override
    public void caseTTkSignDiv(@SuppressWarnings("unused") TTkSignDiv node)
    {
        this.index = 21;
    }

    @Override
    public void caseTTkSignMod(@SuppressWarnings("unused") TTkSignMod node)
    {
        this.index = 22;
    }

    @Override
    public void caseTTkSignColon(@SuppressWarnings("unused") TTkSignColon node)
    {
        this.index = 23;
    }

    @Override
    public void caseTTkSignComma(@SuppressWarnings("unused") TTkSignComma node)
    {
        this.index = 24;
    }

    @Override
    public void caseTTkSignExclamation(@SuppressWarnings("unused") TTkSignExclamation node)
    {
        this.index = 25;
    }

    @Override
    public void caseTTkSignParOpen(@SuppressWarnings("unused") TTkSignParOpen node)
    {
        this.index = 26;
    }

    @Override
    public void caseTTkSignParClose(@SuppressWarnings("unused") TTkSignParClose node)
    {
        this.index = 27;
    }

    @Override
    public void caseTTkSignBraceOpen(@SuppressWarnings("unused") TTkSignBraceOpen node)
    {
        this.index = 28;
    }

    @Override
    public void caseTTkSignBraceClose(@SuppressWarnings("unused") TTkSignBraceClose node)
    {
        this.index = 29;
    }

    @Override
    public void caseTTkSignBoolEqual(@SuppressWarnings("unused") TTkSignBoolEqual node)
    {
        this.index = 30;
    }

    @Override
    public void caseTTkSignBoolGt(@SuppressWarnings("unused") TTkSignBoolGt node)
    {
        this.index = 31;
    }

    @Override
    public void caseTTkSignBoolLt(@SuppressWarnings("unused") TTkSignBoolLt node)
    {
        this.index = 32;
    }

    @Override
    public void caseTTkId(@SuppressWarnings("unused") TTkId node)
    {
        this.index = 33;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 34;
    }
}
