/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.analysis;

import br.ufs.dcomp.compilers.project.nonneumann.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTCommentLine(TCommentLine node);
    void caseTCommentMultiLine(TCommentMultiLine node);
    void caseTReservedEntry(TReservedEntry node);
    void caseTReservedFunction(TReservedFunction node);
    void caseTReservedConst(TReservedConst node);
    void caseTReservedTypeInt(TReservedTypeInt node);
    void caseTReservedTypeBool(TReservedTypeBool node);
    void caseTReservedTypeReal(TReservedTypeReal node);
    void caseTReservedBoolTrue(TReservedBoolTrue node);
    void caseTReservedBoolFalse(TReservedBoolFalse node);
    void caseTReservedBoolAnd(TReservedBoolAnd node);
    void caseTReservedBoolOr(TReservedBoolOr node);
    void caseTReservedIf(TReservedIf node);
    void caseTReservedThen(TReservedThen node);
    void caseTReservedElse(TReservedElse node);
    void caseTReservedLambda(TReservedLambda node);
    void caseTNumberIntegerDec(TNumberIntegerDec node);
    void caseTNumberIntegerHex(TNumberIntegerHex node);
    void caseTNumberFloat(TNumberFloat node);
    void caseTNumberFloatCientificNotation(TNumberFloatCientificNotation node);
    void caseTSignPlus(TSignPlus node);
    void caseTSignMinus(TSignMinus node);
    void caseTSignMult(TSignMult node);
    void caseTSignDiv(TSignDiv node);
    void caseTSignMod(TSignMod node);
    void caseTSignColon(TSignColon node);
    void caseTSignComma(TSignComma node);
    void caseTSignExclamation(TSignExclamation node);
    void caseTSignParOpen(TSignParOpen node);
    void caseTSignParClose(TSignParClose node);
    void caseTSignBoolEqual(TSignBoolEqual node);
    void caseTSignBoolGt(TSignBoolGt node);
    void caseTSignBoolLt(TSignBoolLt node);
    void caseTBlank(TBlank node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
