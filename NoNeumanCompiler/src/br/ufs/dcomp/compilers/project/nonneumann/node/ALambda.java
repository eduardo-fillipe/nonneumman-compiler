/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class ALambda extends PLambda
{
    private TTkReservedLambda _tkReservedLambda_;
    private TTkSignParOpen _tkSignParOpen_;
    private PIdList _idList_;
    private TTkSignParClose _tkSignParClose_;
    private TTkSignColon _tkSignColon_;
    private PTerm _term_;
    private TTkSignBraceOpen _tkSignBraceOpen_;
    private PLambdaExpList _lambdaExpList_;
    private TTkSignBraceClose _tkSignBraceClose_;

    public ALambda()
    {
        // Constructor
    }

    public ALambda(
        @SuppressWarnings("hiding") TTkReservedLambda _tkReservedLambda_,
        @SuppressWarnings("hiding") TTkSignParOpen _tkSignParOpen_,
        @SuppressWarnings("hiding") PIdList _idList_,
        @SuppressWarnings("hiding") TTkSignParClose _tkSignParClose_,
        @SuppressWarnings("hiding") TTkSignColon _tkSignColon_,
        @SuppressWarnings("hiding") PTerm _term_,
        @SuppressWarnings("hiding") TTkSignBraceOpen _tkSignBraceOpen_,
        @SuppressWarnings("hiding") PLambdaExpList _lambdaExpList_,
        @SuppressWarnings("hiding") TTkSignBraceClose _tkSignBraceClose_)
    {
        // Constructor
        setTkReservedLambda(_tkReservedLambda_);

        setTkSignParOpen(_tkSignParOpen_);

        setIdList(_idList_);

        setTkSignParClose(_tkSignParClose_);

        setTkSignColon(_tkSignColon_);

        setTerm(_term_);

        setTkSignBraceOpen(_tkSignBraceOpen_);

        setLambdaExpList(_lambdaExpList_);

        setTkSignBraceClose(_tkSignBraceClose_);

    }

    @Override
    public Object clone()
    {
        return new ALambda(
            cloneNode(this._tkReservedLambda_),
            cloneNode(this._tkSignParOpen_),
            cloneNode(this._idList_),
            cloneNode(this._tkSignParClose_),
            cloneNode(this._tkSignColon_),
            cloneNode(this._term_),
            cloneNode(this._tkSignBraceOpen_),
            cloneNode(this._lambdaExpList_),
            cloneNode(this._tkSignBraceClose_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALambda(this);
    }

    public TTkReservedLambda getTkReservedLambda()
    {
        return this._tkReservedLambda_;
    }

    public void setTkReservedLambda(TTkReservedLambda node)
    {
        if(this._tkReservedLambda_ != null)
        {
            this._tkReservedLambda_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkReservedLambda_ = node;
    }

    public TTkSignParOpen getTkSignParOpen()
    {
        return this._tkSignParOpen_;
    }

    public void setTkSignParOpen(TTkSignParOpen node)
    {
        if(this._tkSignParOpen_ != null)
        {
            this._tkSignParOpen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignParOpen_ = node;
    }

    public PIdList getIdList()
    {
        return this._idList_;
    }

    public void setIdList(PIdList node)
    {
        if(this._idList_ != null)
        {
            this._idList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idList_ = node;
    }

    public TTkSignParClose getTkSignParClose()
    {
        return this._tkSignParClose_;
    }

    public void setTkSignParClose(TTkSignParClose node)
    {
        if(this._tkSignParClose_ != null)
        {
            this._tkSignParClose_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignParClose_ = node;
    }

    public TTkSignColon getTkSignColon()
    {
        return this._tkSignColon_;
    }

    public void setTkSignColon(TTkSignColon node)
    {
        if(this._tkSignColon_ != null)
        {
            this._tkSignColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignColon_ = node;
    }

    public PTerm getTerm()
    {
        return this._term_;
    }

    public void setTerm(PTerm node)
    {
        if(this._term_ != null)
        {
            this._term_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._term_ = node;
    }

    public TTkSignBraceOpen getTkSignBraceOpen()
    {
        return this._tkSignBraceOpen_;
    }

    public void setTkSignBraceOpen(TTkSignBraceOpen node)
    {
        if(this._tkSignBraceOpen_ != null)
        {
            this._tkSignBraceOpen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignBraceOpen_ = node;
    }

    public PLambdaExpList getLambdaExpList()
    {
        return this._lambdaExpList_;
    }

    public void setLambdaExpList(PLambdaExpList node)
    {
        if(this._lambdaExpList_ != null)
        {
            this._lambdaExpList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lambdaExpList_ = node;
    }

    public TTkSignBraceClose getTkSignBraceClose()
    {
        return this._tkSignBraceClose_;
    }

    public void setTkSignBraceClose(TTkSignBraceClose node)
    {
        if(this._tkSignBraceClose_ != null)
        {
            this._tkSignBraceClose_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkSignBraceClose_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tkReservedLambda_)
            + toString(this._tkSignParOpen_)
            + toString(this._idList_)
            + toString(this._tkSignParClose_)
            + toString(this._tkSignColon_)
            + toString(this._term_)
            + toString(this._tkSignBraceOpen_)
            + toString(this._lambdaExpList_)
            + toString(this._tkSignBraceClose_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tkReservedLambda_ == child)
        {
            this._tkReservedLambda_ = null;
            return;
        }

        if(this._tkSignParOpen_ == child)
        {
            this._tkSignParOpen_ = null;
            return;
        }

        if(this._idList_ == child)
        {
            this._idList_ = null;
            return;
        }

        if(this._tkSignParClose_ == child)
        {
            this._tkSignParClose_ = null;
            return;
        }

        if(this._tkSignColon_ == child)
        {
            this._tkSignColon_ = null;
            return;
        }

        if(this._term_ == child)
        {
            this._term_ = null;
            return;
        }

        if(this._tkSignBraceOpen_ == child)
        {
            this._tkSignBraceOpen_ = null;
            return;
        }

        if(this._lambdaExpList_ == child)
        {
            this._lambdaExpList_ = null;
            return;
        }

        if(this._tkSignBraceClose_ == child)
        {
            this._tkSignBraceClose_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tkReservedLambda_ == oldChild)
        {
            setTkReservedLambda((TTkReservedLambda) newChild);
            return;
        }

        if(this._tkSignParOpen_ == oldChild)
        {
            setTkSignParOpen((TTkSignParOpen) newChild);
            return;
        }

        if(this._idList_ == oldChild)
        {
            setIdList((PIdList) newChild);
            return;
        }

        if(this._tkSignParClose_ == oldChild)
        {
            setTkSignParClose((TTkSignParClose) newChild);
            return;
        }

        if(this._tkSignColon_ == oldChild)
        {
            setTkSignColon((TTkSignColon) newChild);
            return;
        }

        if(this._term_ == oldChild)
        {
            setTerm((PTerm) newChild);
            return;
        }

        if(this._tkSignBraceOpen_ == oldChild)
        {
            setTkSignBraceOpen((TTkSignBraceOpen) newChild);
            return;
        }

        if(this._lambdaExpList_ == oldChild)
        {
            setLambdaExpList((PLambdaExpList) newChild);
            return;
        }

        if(this._tkSignBraceClose_ == oldChild)
        {
            setTkSignBraceClose((TTkSignBraceClose) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
