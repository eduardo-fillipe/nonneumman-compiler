/* This file was generated by SableCC (http://www.sablecc.org/). */

package br.ufs.dcomp.compilers.project.nonneumann.node;

import br.ufs.dcomp.compilers.project.nonneumann.analysis.*;

@SuppressWarnings("nls")
public final class ADecAFunctionDec extends PAFunctionDec
{
    private PAType _aType_;
    private TTkId _tkId_;
    private PAParametersFunctionAux _aParametersFunctionAux_;
    private PAExpFunctionAux _aExpFunctionAux_;

    public ADecAFunctionDec()
    {
        // Constructor
    }

    public ADecAFunctionDec(
        @SuppressWarnings("hiding") PAType _aType_,
        @SuppressWarnings("hiding") TTkId _tkId_,
        @SuppressWarnings("hiding") PAParametersFunctionAux _aParametersFunctionAux_,
        @SuppressWarnings("hiding") PAExpFunctionAux _aExpFunctionAux_)
    {
        // Constructor
        setAType(_aType_);

        setTkId(_tkId_);

        setAParametersFunctionAux(_aParametersFunctionAux_);

        setAExpFunctionAux(_aExpFunctionAux_);

    }

    @Override
    public Object clone()
    {
        return new ADecAFunctionDec(
            cloneNode(this._aType_),
            cloneNode(this._tkId_),
            cloneNode(this._aParametersFunctionAux_),
            cloneNode(this._aExpFunctionAux_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecAFunctionDec(this);
    }

    public PAType getAType()
    {
        return this._aType_;
    }

    public void setAType(PAType node)
    {
        if(this._aType_ != null)
        {
            this._aType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aType_ = node;
    }

    public TTkId getTkId()
    {
        return this._tkId_;
    }

    public void setTkId(TTkId node)
    {
        if(this._tkId_ != null)
        {
            this._tkId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tkId_ = node;
    }

    public PAParametersFunctionAux getAParametersFunctionAux()
    {
        return this._aParametersFunctionAux_;
    }

    public void setAParametersFunctionAux(PAParametersFunctionAux node)
    {
        if(this._aParametersFunctionAux_ != null)
        {
            this._aParametersFunctionAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aParametersFunctionAux_ = node;
    }

    public PAExpFunctionAux getAExpFunctionAux()
    {
        return this._aExpFunctionAux_;
    }

    public void setAExpFunctionAux(PAExpFunctionAux node)
    {
        if(this._aExpFunctionAux_ != null)
        {
            this._aExpFunctionAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aExpFunctionAux_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aType_)
            + toString(this._tkId_)
            + toString(this._aParametersFunctionAux_)
            + toString(this._aExpFunctionAux_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aType_ == child)
        {
            this._aType_ = null;
            return;
        }

        if(this._tkId_ == child)
        {
            this._tkId_ = null;
            return;
        }

        if(this._aParametersFunctionAux_ == child)
        {
            this._aParametersFunctionAux_ = null;
            return;
        }

        if(this._aExpFunctionAux_ == child)
        {
            this._aExpFunctionAux_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aType_ == oldChild)
        {
            setAType((PAType) newChild);
            return;
        }

        if(this._tkId_ == oldChild)
        {
            setTkId((TTkId) newChild);
            return;
        }

        if(this._aParametersFunctionAux_ == oldChild)
        {
            setAParametersFunctionAux((PAParametersFunctionAux) newChild);
            return;
        }

        if(this._aExpFunctionAux_ == oldChild)
        {
            setAExpFunctionAux((PAExpFunctionAux) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
